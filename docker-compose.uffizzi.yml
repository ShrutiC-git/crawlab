version: '3.3'

# uffizzi integration
x-uffizzi:
  ingress:
    service: master
    port: 8080

services:

  master:
    image: "${CRAWLAB_IMAGE}"
    # command: /bin/bash -c "/dist/crawlab master"
    environment:
      CRAWLAB_API_ADDRESS: â€œhttp://localhost:8000"
      CRAWLAB_NODE_MASTER: "Y"
      CRAWLAB_MONGO_HOST: "localhost"  # mongo host address. In the docker compose network, directly refer to the service name
      CRAWLAB_MONGO_PORT: "27017"  # mongo port
      CRAWLAB_MONGO_DB: "crawlab"  # mongo database
      CRAWLAB_MONGO_USERNAME: "username"  # mongo username
      CRAWLAB_MONGO_PASSWORD: "password"  # mongo password
    ports:
      - "8080:8080"
      - "9666:9666"
    deploy:
          resources:
            limits:
              memory: 2000M
  # worker01:
  #   image: "${CRAWLAB_IMAGE}"
  #   # command: /bin/bash -c "/dist/crawlab worker"
  #   environment:
  #     CRAWLAB_NODE_MASTER: "N"
  #     CRAWLAB_NODE_NAME: "Worker Node 01"
  #     CRAWLAB_GRPC_ADDRESS: "http://localhost:9666"
  #     CRAWLAB_FS_FILER_URL: "http://localhost:8080/api/filer"
  #     CRAWLAB_LOG_LEVEL: debug
  #   # volumes:
  #   #   - ./backend:/backend
  #   #   - ./backend/go.mod.local:/backend/go.mod
  #   #   - .:/libs/crawlab-team
  #   deploy:
  #         resources:
  #           limits:
  #             memory: 1000M
  #   depends_on:
  #     - master

  mongo:
    image: mongo:4.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: "username"  # mongo username
      MONGO_INITDB_ROOT_PASSWORD: "password"  # mongo password
    deploy:
          resources:
            limits:
              memory: 2000M
    # volumes:
    #   - "/opt/crawlab/mongo/data/db:/data/db"  # persistent mongo data

  # nginx:
  #   image: nginx:alpine
  #   volumes:
  #     - ./nginx-uffizzi:/etc/nginx
